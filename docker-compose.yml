version: "3.10"

services:
  postgres:
    container_name: postgres
    image: library/postgres:13.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - proxy-postgres

  redis:
    container_name: redis
    image: library/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - proxy-redis

  web:
    container_name: web
    build:
      context: .
      dockerfile: .
    command: /start.web.sh
    volumes:
      - temp_volume:/usr/src/web
      - static_volume:/usr/src/app/staticfiles
    env_file:
      - ./core/.env
    networks:
      - proxy-postgres
      - proxy-redis
      - proxy-nginx
    depends_on:
      - postgres

  worker:
    container_name: worker
    build:
      context: .
      dockerfile: .
    command: /start.worker.sh
    volumes:
      - temp_volume:/usr/src/web
    env_file:
      - ./core/.env
    networks:
      - proxy-postgres
      - proxy-redis
    depends_on:
      - postgres
      - web

  beat:
    container_name: beat
    build:
      context: .
      dockerfile: .
    command: /start.beat.sh
    volumes:
      - temp_volume:/usr/src/web
    env_file:
      - ./core/.env
    networks:
      - proxy-postgres
      - proxy-redis
    depends_on:
      - postgres
      - web

  proxy:
    container_name: proxy
    build:
      context: .
      dockerfile: proxy/Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - web
      - worker
      - beat
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/usr/src/app/staticfiles
    networks:
      - proxy-nginx

volumes:
  postgres_db:
    driver: local
  temp_volume:
  static_volume:

networks:
  proxy-postgres:
    driver: bridge
  proxy-redis:
    driver: bridge
  proxy-nginx:
    driver: bridge
